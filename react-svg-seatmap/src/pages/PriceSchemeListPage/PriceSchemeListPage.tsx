import React, { useState } from 'react';
import { useAuth } from '../../hooks/useAuth';
import { usePriceSchemes } from '../../hooks/usePriceSchemes';
import { apiClient, getId } from '../../services/api';
import { Layout } from '../../components/Layout';
import { PriceSchemeCard } from './components/PriceSchemeCard';
import { PriceSchemeCreateModalSimple } from '../../components/PriceSchemeCreateModal/PriceSchemeCreateModalSimple';
import './PriceSchemeListPage.scss';

export const PriceSchemeListPage: React.FC = () => {
  const { data, loading, error, refetch } = usePriceSchemes();
  const priceSchemes = data?.priceSchemes || [];
  const [searchTerm, setSearchTerm] = useState('');
  const [showCreateModal, setShowCreateModal] = useState(false);

  const handleCreatePriceScheme = () => {
    setShowCreateModal(true);
  };

  const handleCloseModal = () => {
    setShowCreateModal(false);
  };

  const handleCreateSuccess = () => {
    refetch(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ä–∞—Å–ø–æ—è—Å–æ–≤–æ–∫
  };

  const handleEdit = (id: string) => {
    window.location.href = `/price-schemes/${id}/edit`;
  };

  const handleDelete = async (id: string) => {
    const schemeToDelete = priceSchemes.find(ps => getId(ps) === id);
    const schemeName = schemeToDelete ? schemeToDelete.name : `ID ${id}`;
    
    if (confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ä–∞—Å–ø–æ—è—Å–æ–≤–∫—É "${schemeName}"?\n\n–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.`)) {
      try {
        await apiClient.deletePriceScheme(id);
        refetch();
        alert(`–†–∞—Å–ø–æ—è—Å–æ–≤–∫–∞ "${schemeName}" —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞`);
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ä–∞—Å–ø–æ—è—Å–æ–≤–∫–∏:', error);
        alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ä–∞—Å–ø–æ—è—Å–æ–≤–∫–∏ "${schemeName}": ` + (error as any)?.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
      }
    }
  };

  const handleView = (id: string) => {
    window.location.href = `/price-schemes/${id}/edit`;
  };

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ä–∞—Å–ø–æ—è—Å–æ–≤–æ–∫ –ø–æ –ø–æ–∏—Å–∫—É
  const filteredSchemes = priceSchemes.filter(scheme => 
    scheme.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
    scheme.hallName.toLowerCase().includes(searchTerm.toLowerCase())
  );

  if (loading) {
    return (
      <div className="price-scheme-list-page">
        <div className="price-scheme-list-page__loading">
          –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —Ä–∞—Å–ø–æ—è—Å–æ–≤–æ–∫...
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="price-scheme-list-page">
        <div className="price-scheme-list-page__error">
          <h2>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h2>
          <p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–∞—Å–ø–æ—è—Å–æ–≤–æ–∫</p>
          <button onClick={() => window.location.reload()} className="btn btn--primary">
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
      </div>
    );
  }

  return (
    <Layout currentPage="price-schemes">
      <div className="price-scheme-list-page">
        <header className="price-scheme-list-page__header">
        <div className="price-scheme-list-page__title">
          <h1>–†–∞—Å–ø–æ—è—Å–æ–≤–∫–∏</h1>
        </div>
        
        <div className="price-scheme-list-page__controls">
          <div className="price-scheme-list-page__search">
            <input
              type="text"
              placeholder="–ü–æ–∏—Å–∫ —Ä–∞—Å–ø–æ—è—Å–æ–≤–æ–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –∑–∞–ª—É..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="search-input"
            />
          </div>
          
          <button onClick={handleCreatePriceScheme} className="btn btn--primary">
            ‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å–ø–æ—è—Å–æ–≤–∫—É
          </button>
          
        </div>
      </header>

      <main className="price-scheme-list-page__content">
        {priceSchemes.length === 0 ? (
          <div className="price-scheme-list-page__empty">
            <div className="price-scheme-list-page__empty-icon">üí∞</div>
            <h2>–†–∞—Å–ø–æ—è—Å–æ–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h2>
            <p>–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é —Ä–∞—Å–ø–æ—è—Å–æ–≤–∫—É –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å —Ü–µ–Ω–∞–º–∏ –Ω–∞ –±–∏–ª–µ—Ç—ã</p>
            <button onClick={handleCreatePriceScheme} className="btn btn--primary btn--lg">
              ‚ûï –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—É—é —Ä–∞—Å–ø–æ—è—Å–æ–≤–∫—É
            </button>
          </div>
        ) : filteredSchemes.length === 0 ? (
          <div className="price-scheme-list-page__empty">
            <div className="price-scheme-list-page__empty-icon">üîç</div>
            <h2>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h2>
            <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å</p>
          </div>
        ) : (
          <>
            <div className="price-scheme-list-page__results">
              <span>–ù–∞–π–¥–µ–Ω–æ —Ä–∞—Å–ø–æ—è—Å–æ–≤–æ–∫: <strong>{filteredSchemes.length}</strong> –∏–∑ {priceSchemes.length}</span>
            </div>
            
            <div className="price-scheme-list-page__grid">
              {filteredSchemes.map(priceScheme => (
                <PriceSchemeCard
                  key={getId(priceScheme)}
                  priceScheme={priceScheme}
                  onEdit={() => handleEdit(getId(priceScheme))}
                  onDelete={() => handleDelete(getId(priceScheme))}
                  onView={() => handleView(getId(priceScheme))}
                />
              ))}
            </div>
          </>
        )}
      </main>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å–ø–æ—è—Å–æ–≤–∫–∏ */}
      <PriceSchemeCreateModalSimple
        isOpen={showCreateModal}
        onClose={handleCloseModal}
        onSuccess={handleCreateSuccess}
      />
    </Layout>
  );
};