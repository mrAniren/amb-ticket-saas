import React from 'react';
import './InvitationSuccessPage.scss';

interface InvitationSuccessPageProps {
  orderData: {
    orderId: string;
    orderNumber: string;
    customerName: string;
    totalAmount: number;
    ticketsCount: number;
    pdfPaths: string[]; // –ú–∞—Å—Å–∏–≤ ticketId –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
  };
  onClose: () => void;
}

const InvitationSuccessPage: React.FC<InvitationSuccessPageProps> = ({
  orderData,
  onClose
}) => {
  const handleDownloadAll = () => {
    // –°–∫–∞—á–∏–≤–∞–µ–º –≤—Å–µ PDF —Ñ–∞–π–ª—ã
    orderData.pdfPaths.forEach((ticketId, index) => {
      const link = document.createElement('a');
      link.href = `/api/tickets/${ticketId}/download`;
      link.download = `–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ_${orderData.orderNumber}_${index + 1}.pdf`;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    });
  };

  const handleDownloadSingle = (ticketId: string, index: number) => {
    const link = document.createElement('a');
    link.href = `/api/tickets/${ticketId}/download`;
    link.download = `–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ_${orderData.orderNumber}_${index + 1}.pdf`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };

  return (
    <div className="invitation-success-overlay">
      <div className="invitation-success-page">
        <div className="invitation-success-page__header">
          <div className="success-icon">
            <svg width="64" height="64" viewBox="0 0 24 24" fill="none">
              <circle cx="12" cy="12" r="10" fill="#2ECC71"/>
              <path d="M9 12l2 2 4-4" stroke="white" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
            </svg>
          </div>
          <h1>üé´ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!</h1>
          <p className="success-message">
            –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥–ª—è <strong>{orderData.customerName}</strong> –≥–æ—Ç–æ–≤—ã –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é
          </p>
        </div>

        <div className="invitation-success-page__content">
          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ */}
          <div className="order-info">
            <h3>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ</h3>
            <div className="info-grid">
              <div className="info-item">
                <span className="label">–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:</span>
                <span className="value">{orderData.orderNumber}</span>
              </div>
              <div className="info-item">
                <span className="label">–ö–ª–∏–µ–Ω—Ç:</span>
                <span className="value">{orderData.customerName}</span>
              </div>
              <div className="info-item">
                <span className="label">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π:</span>
                <span className="value">{orderData.ticketsCount}</span>
              </div>
              <div className="info-item">
                <span className="label">–°—É–º–º–∞:</span>
                <span className="value">{orderData.totalAmount.toLocaleString('ru-RU')} ‚ÇΩ</span>
              </div>
            </div>
          </div>

          {/* –°–ø–∏—Å–æ–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π */}
          <div className="invitations-list">
            <h3>–°–æ–∑–¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è</h3>
            <div className="invitations-grid">
              {orderData.pdfPaths.length > 0 ? (
                orderData.pdfPaths.map((ticketId, index) => (
                  <div key={index} className="invitation-item">
                    <div className="invitation-icon">
                      <svg width="32" height="32" viewBox="0 0 24 24" fill="none">
                        <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z" stroke="#E67E22" strokeWidth="2"/>
                        <polyline points="14,2 14,8 20,8" stroke="#E67E22" strokeWidth="2"/>
                        <line x1="16" y1="13" x2="8" y2="13" stroke="#E67E22" strokeWidth="2"/>
                        <line x1="16" y1="17" x2="8" y2="17" stroke="#E67E22" strokeWidth="2"/>
                        <polyline points="10,9 9,9 8,9" stroke="#E67E22" strokeWidth="2"/>
                      </svg>
                    </div>
                    <div className="invitation-details">
                      <div className="invitation-name">–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ #{index + 1}</div>
                      <div className="invitation-status">–ì–æ—Ç–æ–≤–æ –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é</div>
                    </div>
                    <button
                      className="download-btn"
                      onClick={() => handleDownloadSingle(ticketId, index)}
                      title="–°–∫–∞—á–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ"
                    >
                      <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                        <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4" stroke="currentColor" strokeWidth="2"/>
                        <polyline points="7,10 12,15 17,10" stroke="currentColor" strokeWidth="2"/>
                        <line x1="12" y1="15" x2="12" y2="3" stroke="currentColor" strokeWidth="2"/>
                      </svg>
                    </button>
                  </div>
                ))
              ) : (
                <div className="no-invitations">
                  <div className="no-invitations-icon">
                    <svg width="48" height="48" viewBox="0 0 24 24" fill="none">
                      <circle cx="12" cy="12" r="10" stroke="#6C757D" strokeWidth="2"/>
                      <line x1="12" y1="8" x2="12" y2="12" stroke="#6C757D" strokeWidth="2"/>
                      <line x1="12" y1="16" x2="12.01" y2="16" stroke="#6C757D" strokeWidth="2"/>
                    </svg>
                  </div>
                  <div className="no-invitations-text">
                    <h4>PDF —Ñ–∞–π–ª—ã –µ—â–µ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è</h4>
                    <p>–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã, –Ω–æ PDF —Ñ–∞–π–ª—ã –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.</p>
                  </div>
                </div>
              )}
            </div>
          </div>

          {/* –î–µ–π—Å—Ç–≤–∏—è */}
          <div className="actions">
            <button
              className="btn-download-all"
              onClick={handleDownloadAll}
              disabled={orderData.pdfPaths.length === 0}
            >
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4" stroke="currentColor" strokeWidth="2"/>
                <polyline points="7,10 12,15 17,10" stroke="currentColor" strokeWidth="2"/>
                <line x1="12" y1="15" x2="12" y2="3" stroke="currentColor" strokeWidth="2"/>
              </svg>
              {orderData.pdfPaths.length > 0 ? '–°–∫–∞—á–∞—Ç—å –≤—Å–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è' : 'PDF –µ—â–µ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è'}
            </button>
            
            <button
              className="btn-close"
              onClick={onClose}
            >
              –ó–∞–∫—Ä—ã—Ç—å
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default InvitationSuccessPage;
