import React, { useState, useEffect } from 'react';
import { apiClient, getId } from '../../services/api';
import { PriceSchemeCreateData } from '../../types/PriceScheme.types';
import './PriceSchemeCreateModal.scss';

interface PriceSchemeCreateModalProps {
  isOpen: boolean;
  onClose: () => void;
  onSuccess: (priceSchemeId: string) => void;
  preselectedHallId?: number;
  hallName?: string;
  sessionFormData?: {
    eventId?: string;
    date?: string;
    time?: string;
  };
}

export const PriceSchemeCreateModal: React.FC<PriceSchemeCreateModalProps> = ({
  isOpen,
  onClose,
  onSuccess: _onSuccess,
  preselectedHallId,
  hallName,
  sessionFormData
}) => {
  const [formData, setFormData] = useState<PriceSchemeCreateData>({
    name: '',
    hallId: preselectedHallId?.toString() || ''
  });
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');

  // –û–±–Ω–æ–≤–ª—è–µ–º hallId –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ preselectedHallId
  useEffect(() => {
    console.log('useEffect: preselectedHallId –∏–∑–º–µ–Ω–∏–ª—Å—è:', preselectedHallId);
    if (preselectedHallId) {
      setFormData(prev => ({
        ...prev,
        hallId: preselectedHallId.toString()
      }));
    }
  }, [preselectedHallId]);

  // –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª–∞
  useEffect(() => {
    if (isOpen) {
      console.log('üîç –ú–æ–¥–∞–ª –æ—Ç–∫—Ä—ã—Ç. –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:');
      console.log('  - preselectedHallId:', preselectedHallId, '(type:', typeof preselectedHallId, ')');
      console.log('  - hallName:', hallName);
      console.log('  - sessionFormData:', sessionFormData);
      console.log('  - formData:', formData);
    }
  }, [isOpen, preselectedHallId, hallName, sessionFormData, formData]);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    console.log('–î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –ø–µ—Ä–µ–¥ –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π:', formData);
    console.log('preselectedHallId:', preselectedHallId);
    console.log('hallName:', hallName);
    
    if (!formData.name.trim()) {
      setError('–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞—Å–ø–æ—è—Å–æ–≤–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ');
      return;
    }
    
    if (!formData.hallId) {
      setError('–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–ª');
      return;
    }

    setLoading(true);
    setError('');

    try {
      console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ API –¥–∞–Ω–Ω—ã–µ:', formData);
      const result = await apiClient.createPriceScheme(formData);
      console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è:', result);
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª
      onClose();
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–ø–æ—è—Å–æ–≤–∫–∏ –≤ inline —Ä–µ–∂–∏–º–µ
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –∏–∑ SessionCreatePage
      const sessionData = new URLSearchParams();
      
      // –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–µ–∞–Ω—Å–∞
      if (sessionFormData?.eventId) sessionData.set('eventId', sessionFormData.eventId);
      if (sessionFormData?.date) sessionData.set('date', sessionFormData.date);
      if (sessionFormData?.time) sessionData.set('time', sessionFormData.time);
      sessionData.set('hallId', formData.hallId);
      const priceSchemeId = getId(result.priceScheme);
      sessionData.set('newPriceSchemeId', priceSchemeId);
      
      const returnUrl = `/sessions/create?${sessionData.toString()}`;
      window.location.href = `/price-schemes/${priceSchemeId}/edit?mode=inline&sessionContext=true&returnTo=${encodeURIComponent(returnUrl)}`;
      
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å–ø–æ—è—Å–æ–≤–∫–∏:', err);
      setError(err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–∞—Å–ø–æ—è—Å–æ–≤–∫–∏');
    } finally {
      setLoading(false);
    }
  };

  const handleCancel = () => {
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª
    setFormData({
      name: '',
      hallId: preselectedHallId?.toString() || ''
    });
    setError('');
    onClose();
  };

  const handleOverlayClick = (e: React.MouseEvent) => {
    if (e.target === e.currentTarget) {
      handleCancel();
    }
  };

  if (!isOpen) {
    return null;
  }

  return (
    <div className="price-scheme-create-modal" onClick={handleOverlayClick}>
      <div className="price-scheme-create-modal__content">
        <div className="price-scheme-create-modal__header">
          <h2 className="price-scheme-create-modal__title">
            –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å–ø–æ—è—Å–æ–≤–∫–∏
          </h2>
          <button
            type="button"
            onClick={handleCancel}
            className="price-scheme-create-modal__close"
            disabled={loading}
          >
            ‚úï
          </button>
        </div>

        <div className="price-scheme-create-modal__body">
          {error && (
            <div className="price-scheme-create-modal__error">
              {error}
            </div>
          )}

          <form onSubmit={handleSubmit} className="price-scheme-create-form">
            <div className="price-scheme-create-form__field">
              <label htmlFor="modal-name" className="price-scheme-create-form__label">
                –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞—Å–ø–æ—è—Å–æ–≤–∫–∏ *
              </label>
              <input
                type="text"
                id="modal-name"
                value={formData.name}
                onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}
                className="price-scheme-create-form__input"
                placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–∞—Å–ø–æ—è—Å–æ–≤–∫–∏"
                required
                disabled={loading}
                autoFocus
              />
            </div>

            <div className="price-scheme-create-form__field">
              <label htmlFor="modal-hall" className="price-scheme-create-form__label">
                –ó–∞–ª *
              </label>
              {preselectedHallId ? (
                <div className="price-scheme-create-form__selected-hall">
                  <span className="price-scheme-create-form__hall-name">
                    {hallName || `–ó–∞–ª ID: ${preselectedHallId}`}
                  </span>
                  <span className="price-scheme-create-form__hall-note">
                    (–≤—ã–±—Ä–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–ª—è —Å–µ–∞–Ω—Å–∞)
                  </span>
                </div>
              ) : (
                <div className="price-scheme-create-form__no-hall">
                  <span className="price-scheme-create-form__error-text">
                    –ó–∞–ª –Ω–µ –≤—ã–±—Ä–∞–Ω. –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∑–∞–ª –≤ —Ñ–æ—Ä–º–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ–∞–Ω—Å–∞.
                  </span>
                </div>
              )}
            </div>

            <div className="price-scheme-create-form__info">
              <div className="price-scheme-create-form__info-icon">üí°</div>
              <div className="price-scheme-create-form__info-text">
                –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å–ø–æ—è—Å–æ–≤–∫–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ü–µ–Ω—ã –∏ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∏—Ö –º–µ—Å—Ç–∞–º –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ.
              </div>
            </div>
          </form>
        </div>

        <div className="price-scheme-create-modal__footer">
          <button
            type="button"
            onClick={handleCancel}
            className="btn btn--secondary"
            disabled={loading}
          >
            –û—Ç–º–µ–Ω–∞
          </button>
          
          <button
            type="submit"
            onClick={handleSubmit}
            className="btn btn--primary"
            disabled={loading || !preselectedHallId}
          >
            {loading ? (
              <>
                <span className="btn__spinner"></span>
                –°–æ–∑–¥–∞–Ω–∏–µ...
              </>
            ) : (
              '‚ú® –°–æ–∑–¥–∞—Ç—å —Ä–∞—Å–ø–æ—è—Å–æ–≤–∫—É'
            )}
          </button>
        </div>
      </div>
    </div>
  );
};
